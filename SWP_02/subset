# Set the working directory 
setwd("/Users/hahnl/Desktop/Master/Kurse/Customer Analytics and Customer Insights/SWP2")



# Install and Load the required libraries 

library(reshape2)

# Load the dataset
data.long <- read.csv("data.cities.long-3.csv")

data.wide <- read.csv("QuestionaireData_CityTrips_csv.csv")

head(data.wide)
head(data.long)

# Filter in resp based on, e.g., socio-demographics
dim(data.wide) # 266 462

# Let's create a Dummy variable that will indicate whether the respondent 
# should be dropped or not.
# For now I will assign it to be NA (as in missing)
data.wide$drop <- NA
dim(data.wide) # 266 463

data.wide[, c("Sample", "ID", "Age", "drop")]

# Now you can assign drop = 1, based on any criterion
# Let's say we want to drop respondents with Age = 11
data.wide$drop <- ifelse(data.wide$Age <= 11, 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Age >= 30, 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Nationality != "German", 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Nationality == "Deutsch", 0, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Occupation == "Diploma", 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Occupation == "Employed", 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Occupation == "Going to be a Me", 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Occupation == "Schoolboy", 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Occupation == "Self-Employed", 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Occupation == "state examinatio", 1, data.wide$drop)
data.wide$drop <- ifelse(data.wide$Occupation == "Unemployed", 1, data.wide$drop)

# Technically, I wrote that if Age is equal to 11, then 
# the drop dummy should equal 1, else equal it's previous value

# print, to see what happened
data.wide[, c("Sample", "ID", "Age", "Occupation", "Nationality", "drop")]
# Note that you have some NAs (missings) in Age for some respondents

# Let's filter on some other criterion as well
# E.g., let's only keep Bachelor students
#data.wide$drop <- ifelse(data.wide$Occupation != "Bachelor student", 1, data.wide$drop)

# print, to see what happened
#data.wide[, c("Sample", "ID", "Age", "Occupation", "drop")]

# When you are done filtering, let's assign the NAs as 0, so that it is indeed a dummy
data.wide$drop <- ifelse(is.na(data.wide$drop), 0, data.wide$drop)

# print, to see what happened
data.wide[, c("Sample", "ID", "Age", "Occupation", "drop")]


# No, let's subset and keep only respondents that we don't want to drop (drop = 0)
data.wide <- subset(data.wide, drop == 0)


#dim(data.wide) # 64 463
dim(data.wide)

# print, to see what happened
data.wide[, c("Sample", "ID", "Age", "Occupation", "drop")]

# Now we need to subset the data in the long format, i.e.,
# select only those respondents there which we have retained based on socio-demographics
# Note that the ID variable is not unique, it is the Sample-ID combination which is unique
# Each Sample-ID combination represents one respondent

selected <- data.wide[, c("Sample", "ID")]
selected
# I just separated the Sample-ID variables


# Now we merge this with data.long, such that only those Sample-ID combinations
# in selected are retained

test <- merge(selected, data.long, by = c("Sample", "ID"), all.x = TRUE)
# the order is important. all.x == TRUE argument means, that I want to combine
# for only those observations that I have in the dataset placed in the first place
# general form of the funxtion merge(x, y, by = , all.x = , ...)

test

# Let's check that it is correct, we know we have retained only 64 respondents
dim(unique(test[, c("Sample", "ID")]))
# 64  2
# It matches, mission accomplished!

write.csv(test, "/Users/hahnl/Desktop/Master/Kurse/Customer Analytics and Customer Insights/SWP2/new_subset.csv")
